{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Bao Nguyen\\\\React-projects\\\\meeting_project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetailId(props) {\n  _s();\n\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: props.img,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} // if you have dynamic pages, you will ned also getStaticPaths() to ensure that every dynamic is pre-render\n\n\n_s(MeetupDetailId, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetailId;\nexport var __N_SSG = true;\nexport default MeetupDetailId;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailId\");","map":{"version":3,"sources":["C:/Users/Bao Nguyen/React-projects/meeting_project/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MeetupDetailId","props","router","img","title","address","description"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAEG,KAAK,CAACE,GADb;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAFf;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAHjB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;GAbSN,c;UACQF,S;;;KADRE,c;;AAwDT,eAAeA,cAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetailId(props) {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <MeetupDetail\r\n      img={props.img}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    ></MeetupDetail>\r\n  );\r\n}\r\n\r\n// if you have dynamic pages, you will ned also getStaticPaths() to ensure that every dynamic is pre-render\r\n\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://quocbao19982009:Qscesz123@cluster0.g9eyr.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  console.log(\"selected\", meetups);\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    // if you define all the page, say yes, if not then say no, the one you define here will be prerender\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n  console.log(context);\r\n  // To access the ID or parms of the page use: context.params.[dynamic]\r\n\r\n  return {\r\n    props: {\r\n      img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n      title: \"First Meetup\",\r\n      address: \"Some Street 5, Some City\",\r\n      description: \"This is a first meetup\",\r\n      id: meetupId,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailId;\r\n"]},"metadata":{},"sourceType":"module"}